{
  "comments": [
    {
      "key": {
        "uuid": "7801ba60_8ad8a8bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-09-08T23:27:43Z",
      "side": 1,
      "message": "Why compiler flag if we have configuration file. So if pin is defined then enable it or disable it.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb588aab_f8f0520b",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1104,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "Because this can fail, it should return an error code",
      "range": {
        "startLine": 1104,
        "startChar": 0,
        "endLine": 1104,
        "endChar": 7
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6183581_b35f1e60",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1106,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "This should be checking the current state of slotACPowerState  before setting the GPIO",
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d679d841_05b95c6d",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1110,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "This should go in the conditional above.",
      "range": {
        "startLine": 1110,
        "startChar": 0,
        "endLine": 1110,
        "endChar": 50
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa7bee34_7ae00d9f",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1115,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "Need to check current state.",
      "range": {
        "startLine": 1115,
        "startChar": 0,
        "endLine": 1115,
        "endChar": 59
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b355ba_e782f8ed",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1129,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "This blocks the main reactor, which can cause problems with other GPIO handlers.  Use async_wait, and call a callback",
      "range": {
        "startLine": 1129,
        "startChar": 0,
        "endLine": 1129,
        "endChar": 33
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32e3166b_17fe5ba4",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2374,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-14T15:35:24Z",
      "side": 1,
      "message": "This should be checking the current state, similar to the other examples above, not setting it.  BMCs are expected to reset (such as in a firmware update) without cycling their GPIOs",
      "range": {
        "startLine": 2369,
        "startChar": 0,
        "endLine": 2374,
        "endChar": 5
      },
      "revId": "4be3994faf98a2ce8b132c3eba4d99990d4b1f44",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}