{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de4fe24e_a326787a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-05-09T21:33:22Z",
      "side": 1,
      "message": "It\u0027s looking good. A couple more minor comments.",
      "revId": "fa590c62c6e71d953ed02b0f6109d2dc20710093",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05ef7d73_a2c08459",
        "filename": "src/power_control.cpp",
        "patchSetId": 9
      },
      "lineNbr": 148,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-05-09T21:33:22Z",
      "side": 1,
      "message": "It would be good to also add this into the JSON config file with the default as an example.",
      "revId": "fa590c62c6e71d953ed02b0f6109d2dc20710093",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e45c95_50ce0317",
        "filename": "src/power_control.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2212,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-05-09T21:33:22Z",
      "side": 1,
      "message": "I thought we wanted to block all NMI actions based on the host state?\n\nThis could be changed (if I got the logic right) to\n```\n        if (!nmiWhenPoweredOff \u0026\u0026\n            getHostState(powerState) !\u003d\n                \"xyz.openbmc_project.State.Host.HostState.Running\")\n        {\n            return;\n        }\n```",
      "range": {
        "startLine": 2207,
        "startChar": 1,
        "endLine": 2212,
        "endChar": 9
      },
      "revId": "fa590c62c6e71d953ed02b0f6109d2dc20710093",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb14b4d8_d3d8ceb6",
        "filename": "src/power_control.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2434,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-05-09T21:33:22Z",
      "side": 1,
      "message": "nit: `auto` is preferred only when the type is clear from the context.  In this case, it appears to be a `bool` which is pretty clear, but then is there any reason to use `auto` instead of just `bool`?",
      "revId": "fa590c62c6e71d953ed02b0f6109d2dc20710093",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}