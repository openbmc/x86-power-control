{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "121321fe_30c2e1d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-10-31T01:57:10Z",
      "side": 1,
      "message": "I\u0027m not necessarily opposed to this feature, but this example sounds like a problem with under-specified service dependencies -- i.e. x86-power-control starting before another service that provides the dbus object it\u0027s going to be looking for.  Are there cases of this sort of problem arising even with properly specified dependencies?",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21dba1bb_488bcad6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-10-31T08:46:33Z",
      "side": 1,
      "message": "I have tested that possibility. Unfortunately, even when x86-power-control is defined to run after service that creates needed DBus interfaces, I\u0027ve observed problem with exception. The problem is that second service doesn\u0027t create all of its interfaces right away, and as result they don\u0027t exist yet when x86-power-control starts.",
      "parentUuid": "121321fe_30c2e1d1",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db4bd1b_97802a67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-09T03:23:51Z",
      "side": 1,
      "message": "Hmm, in that case I\u0027d think maybe the appropriate solution would be to add a mapper-wait dependency to the x86-power-control service definition instead?  That could be done entirely in bitbake even...",
      "parentUuid": "21dba1bb_488bcad6",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47747776_f3e1005e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-11-09T19:59:42Z",
      "side": 1,
      "message": "I have heard of issues in the past with using mapper-wait in the service.  I don\u0027t remember the details, but in this case, it creates a circular dependency with the application that is providing our POST Complete D-Bus property.  That service won\u0027t provide POST Complete status until it sees the correct host state from x86-power-control.\n\nI feel like we could implement the D-Bus handling better with matches on InterfacesAdded and PropertiesChanged to handle the signal change events as they come in.  But that is a larger effort to rework overall how D-Bus properties are managed.  Could this solution work for now until we can figure out a more robust solution to handle D-Bus properties?",
      "parentUuid": "0db4bd1b_97802a67",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7c7951a_80e21aec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "\u003e That service won\u0027t provide POST Complete status until it sees the correct host state from x86-power-control.\n\nI assume the other service involved here isn\u0027t in upstream OpenBMC?  \n\nI\u0027m sort of curious about the details; from the brief description here it sounds a bit odd -- I\u0027d have thought \"POST not complete\" would be a reasonable default value for it to provide unless/until it knows otherwise (to break the cyclic dependency).",
      "parentUuid": "47747776_f3e1005e",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e74b05c1_e295f7e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-11-16T21:48:45Z",
      "side": 1,
      "message": "That\u0027s true.  The only issue with defaulting to \"POST not complete\" is that will trigger the \"InterfacesAdded\"/\"PropertiesChanged\" events on D-Bus with the incorrect state if POST is complete.  I don\u0027t know if that will result in unexpected behavior for the consumers of that signal.",
      "parentUuid": "e7c7951a_80e21aec",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be361482_0f420ba4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-11-08T18:51:34Z",
      "side": 1,
      "message": "This looks okay especially as a starting point for this solution, so I\u0027m giving +1 for now.  If there is no other feedback, I will promote to +2.\n\n@Zev, did you have any additional concerns?",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca96f1c3_2dd48b09",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-11-08T18:51:34Z",
      "side": 1,
      "message": "It may be good to also update the default JSON config file with this default value.",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f9002ea_31837bd3",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-15T10:30:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca96f1c3_2dd48b09",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54c32659_0a8b3015",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2519,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "I might suggest putting \"exception\" instead of \"error\" in the log message here, mostly just to more clearly distinguish this case from the `reply.is_method_error()` case handled above.",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67051f5_2bb10e9b",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2519,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-15T10:30:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54c32659_0a8b3015",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deef2514_d3de0ed3",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2522,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "Hmmm...looking at the various callers, it seems like they\u0027re not all necessarily set up to handle an error return here appropriately, but I suppose that\u0027s just a \"status quo\" problem and not really an issue with this patch per se.",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f92ae8b2_4f0cb9b0",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2572,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "What if the retry still fails after the wait period -- do we need to re-arm the timer here?  Which I suppose also raises questions of if we should have a limit on how many times (or for how long) we\u0027ll retry...",
      "range": {
        "startLine": 2568,
        "startChar": 0,
        "endLine": 2572,
        "endChar": 9
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3becb90_b30d9af3",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2572,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-10T11:27:26Z",
      "side": 1,
      "message": "For now timer is set to rearm only after DBus exception. Do You think that we should do that for other error cases as well? If so, I\u0027ll handle that. As of a limit of retries, we could handle it by adding a JSON option with some default value, would that be OK?",
      "parentUuid": "f92ae8b2_4f0cb9b0",
      "range": {
        "startLine": 2568,
        "startChar": 0,
        "endLine": 2572,
        "endChar": 9
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "381a1fa1_43382e2f",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2572,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-15T03:15:00Z",
      "side": 1,
      "message": "Oh, I had missed that the getProperty() call immediately above would re-arm on an exception...I guess one thing I\u0027m not really clear on is what sorts of errors result in an exception vs. an error reply -- a comment providing some detail on that might help clarify?",
      "parentUuid": "e3becb90_b30d9af3",
      "range": {
        "startLine": 2568,
        "startChar": 0,
        "endLine": 2572,
        "endChar": 9
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb5d6c1_433f11b4",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2572,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-15T09:44:04Z",
      "side": 1,
      "message": "Exception: Call attempt failed (e.g. because of non-existent object path)\nError reply: Call succeeded, but called method has returned some error code",
      "parentUuid": "381a1fa1_43382e2f",
      "range": {
        "startLine": 2568,
        "startChar": 0,
        "endLine": 2572,
        "endChar": 9
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20f9a5a_0fd7d612",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2576,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "Nit: looks like ordering this one before reschedulePropertyRead() would eliminate the need for the separate declaration of it above (though given the mutual recursion between that one and getProperty() I suppose the other will need to remain).",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52450af_ad7df095",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2576,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-15T10:30:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d20f9a5a_0fd7d612",
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a4d8e4f_44297c3d",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2604,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-10T01:12:28Z",
      "side": 1,
      "message": "I don\u0027t know if any of it might for some reason be mandated by our clang-format config (feel free to ignore me if so), but all the parenthesization here (aside from function calls and `if` conditions of course) seems a bit excessive to me...also, stylistically `readValue \u003e 0` strikes me as a bit odd as a test; should we maybe just make it `bool state` or something instead?",
      "range": {
        "startLine": 2580,
        "startChar": 0,
        "endLine": 2604,
        "endChar": 67
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a1e7809_4809a341",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2604,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-10T11:27:26Z",
      "side": 1,
      "message": "Unfortunately I don\u0027t see any way to make this sequence more generic, as hostIface properties are of different types and may contain different values depending on read status. I\u0027ll try to make it more readable though.",
      "parentUuid": "9a4d8e4f_44297c3d",
      "range": {
        "startLine": 2580,
        "startChar": 0,
        "endLine": 2604,
        "endChar": 67
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77256813_96d0e387",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2604,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-11-15T03:15:00Z",
      "side": 1,
      "message": "The repetitive code is a bit unfortunate, yes, though I also don\u0027t see any obvious/easy better way of structuring it offhand -- what I was referring to in my comment was just dropping some extra parens, e.g. the ones around `readValue \u003d\u003d 0` and the ternary expressions.  (Though I also still wonder if making the `readValue` parameter a bool instead of an int might make more sense.)",
      "parentUuid": "0a1e7809_4809a341",
      "range": {
        "startLine": 2580,
        "startChar": 0,
        "endLine": 2604,
        "endChar": 67
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f401bec4_8730bba8",
        "filename": "src/power_control.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2604,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-11-15T10:30:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77256813_96d0e387",
      "range": {
        "startLine": 2580,
        "startChar": 0,
        "endLine": 2604,
        "endChar": 67
      },
      "revId": "1d42b5f91a201d467744a8b57aad50bbd858b89e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}