{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7599d711_d9ee5dac",
        "filename": "src/power_control.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2904,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2024-02-09T23:00:40Z",
      "side": 1,
      "message": "So if we\u0027re just unconditionally asserting it and leaving it that way, I\u0027m not sure I understand the point.  Is the assumption just that if the BMC is running at all, then all the standby rails must be in a good state?  Is there some other input (like a voltage measurement from an ADC or something) that the BMC should be checking first instead of just blindly asserting it?  Because if this is really the entirety of the logic that\u0027s needed, it seems like it might as well just be a gpio-hog in the device tree.",
      "range": {
        "startLine": 2899,
        "startChar": 0,
        "endLine": 2904,
        "endChar": 0
      },
      "revId": "4717761beb344de23fe52371d34b2f06961512b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44397f6_cfec0ea8",
        "filename": "src/power_control.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2904,
      "author": {
        "id": 1000299
      },
      "writtenOn": "2024-02-14T16:41:40Z",
      "side": 1,
      "message": "A typical power and boot sequence is specified in Open Compute Project - DC SCM v1.0 specification: https://www.opencompute.org/documents/ocp-dc-scm-spec-rev-1-0-pdf\nPlease refer section 3.4.12 Standby Power and Boot Sequence of the above document.",
      "parentUuid": "7599d711_d9ee5dac",
      "range": {
        "startLine": 2899,
        "startChar": 0,
        "endLine": 2904,
        "endChar": 0
      },
      "revId": "4717761beb344de23fe52371d34b2f06961512b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27de9d68_becd39dd",
        "filename": "src/power_control.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2904,
      "author": {
        "id": 1000299
      },
      "writtenOn": "2024-02-14T16:42:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a44397f6_cfec0ea8",
      "range": {
        "startLine": 2899,
        "startChar": 0,
        "endLine": 2904,
        "endChar": 0
      },
      "revId": "4717761beb344de23fe52371d34b2f06961512b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fa4dca7_24d1deba",
        "filename": "src/power_control.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2904,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2024-02-16T01:29:02Z",
      "side": 1,
      "message": "Okay, thanks for the spec link -- that\u0027s a useful reference, but I\u0027m not clear on how it motivates this patch.  From that document, it looks like HPM_STBY_EN must be asserted before HPM_STBY_RDY, which in turn must be asserted before the BMC can even be released from reset, so something else on the SCM must be driving it prior to the BMC coming online -- a CPLD or the like, or maybe just a pull-up resistor?  Are there any situations in which the BMC might want to deassert HPM_STBY_EN, or would doing so also reset the BMC via HPM_STBY_RDY getting deasserted as a result?",
      "parentUuid": "27de9d68_becd39dd",
      "range": {
        "startLine": 2899,
        "startChar": 0,
        "endLine": 2904,
        "endChar": 0
      },
      "revId": "4717761beb344de23fe52371d34b2f06961512b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15803b67_86d9ca22",
        "filename": "src/power_control.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2904,
      "author": {
        "id": 1000299
      },
      "writtenOn": "2024-02-16T01:55:15Z",
      "side": 1,
      "message": "HPM_STBY_EN is a signal to HPM after verifying BMC side VRs are good [Which is optional if the VRs are self-enabled]. The purpose of this patch is to introduce a signal called \"HPM_STBY_EN\" which is a standard signal as per DC-SCM specification and initializing it to default state. HPM_STBY_EN is an indication for the HPM FPGA/CPLD to start the rest of the power sequencing. [Turn on host side power rails, etc].",
      "parentUuid": "1fa4dca7_24d1deba",
      "range": {
        "startLine": 2899,
        "startChar": 0,
        "endLine": 2904,
        "endChar": 0
      },
      "revId": "4717761beb344de23fe52371d34b2f06961512b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}