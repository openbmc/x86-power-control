{
  "comments": [
    {
      "key": {
        "uuid": "34a48e5c_a6f87165",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1189,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T11:54:58Z",
      "side": 1,
      "message": "To be honest, this logic is confusing to me, but if Jason is fine with it so be it.\n\nI would have expected that the presence of ConfigData implied that that ConfigData *had* the polarity, not that the ConfigData ends up inverting the default polarity.  The way this logic is specifying, it means that someone has to know the \"default\" polarity for each pin in order to reverse engineer the desired value for their machine.",
      "range": {
        "startLine": 1181,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 5
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "521d032e_ec19d081",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1189,
      "author": {
        "id": 1000854
      },
      "writtenOn": "2021-09-08T17:41:28Z",
      "side": 1,
      "message": "The challenge here is that, for each pin we have to define if it is active low or active high. This is what the polarity parameter remember. Then we have transient state which are driven by GPIO value, and drive a flip/flop approach, which explain the logic. I am not a big fan of it, but by pushing it here, it is lowering code modifications.",
      "parentUuid": "34a48e5c_a6f87165",
      "range": {
        "startLine": 1181,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 5
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de7e48c1_11762cce",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1189,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-08T20:54:43Z",
      "side": 1,
      "message": "Hmm... These are good points.  We only use setGPIOOutputForMs() in a few places and it is always to assert the GPIO.  If it would be cleaner, I\u0027d be okay changing it to something like assertGPIOforMs() and then use the polarity to assert the GPIO instead of taking the value as a parameter.",
      "parentUuid": "521d032e_ec19d081",
      "range": {
        "startLine": 1181,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 5
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2694b3d_234517cf",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1209,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T11:54:58Z",
      "side": 1,
      "message": "`const std::string\u0026 name \u003d config.lineName`?",
      "range": {
        "startLine": 1208,
        "startChar": 0,
        "endLine": 1209,
        "endChar": 27
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c39109b6_f698ad98",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1368,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "Looks like this function needs to be updated like the powerOut functions above.",
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31e6d3f7_a04f101e",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2564,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "Can this message be one line to avoid the \u0027\\\u0027 and tabs?",
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd6383c1_0e85f394",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2564,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T11:54:58Z",
      "side": 1,
      "message": "There is an update to our global .clang-format which should probably be replicated to this repository.  It adds \"BreakStringLiterals: false\" which allows long strings.",
      "parentUuid": "31e6d3f7_a04f101e",
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "537cfc9e_d235d876",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2572,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "If \"Polarity\" can still be an int, should this be treated as 0 is false and all other values are true?\n\nSo, would this work\ntempGpioData-\u003epolarity \u003d (temp !\u003d 0)",
      "range": {
        "startLine": 2569,
        "startChar": 0,
        "endLine": 2572,
        "endChar": 51
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c273a40_c5411d2f",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2575,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "OpenBMC style is to use curly braces even on single-line if-else statements.",
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d85c50a_b8eb3029",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2575,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T11:54:58Z",
      "side": 1,
      "message": "I\u0027m surprised the .clang-format doesn\u0027t enforce this.  Maybe only clang-tidy does.",
      "parentUuid": "8c273a40_c5411d2f",
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fff93639_d77649e5",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3391,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "Can this just be\n            if (!setGPIOOutput(powerOutConfig.lineName, !powerOutConfig.polarity, line))\n            {\n                return -1;\n            }",
      "range": {
        "startLine": 3379,
        "startChar": 0,
        "endLine": 3391,
        "endChar": 13
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e6aea3e_5f7a9253",
        "filename": "power-control-x86/src/power_control.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3415,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-09-07T20:30:13Z",
      "side": 1,
      "message": "Same here?",
      "range": {
        "startLine": 3403,
        "startChar": 0,
        "endLine": 3415,
        "endChar": 13
      },
      "revId": "41d21a8a8bde7529a23dd7fdde876cb2000df14e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}