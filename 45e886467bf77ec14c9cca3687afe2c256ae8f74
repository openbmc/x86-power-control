{
  "comments": [
    {
      "key": {
        "uuid": "0d2dfa41_fe6f7af2",
        "filename": "config/power-config-host0.json",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "Typo?  (Looks like this should be 1.0 to match the previous 1000ms.)",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47ad3671_4e8774fb",
        "filename": "config/power-config-host0.json",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "300 instead of 3?",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2f108b_20b60dda",
        "filename": "src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "s/3.0/300/ here as well.",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fc829ce_afe629db",
        "filename": "src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 696,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "I\u0027d guess we want to switch `%d` out for something else (`%f` perhaps) here now?  (I guess we don\u0027t have `__attribute__((printf(...))`-style compile-time checking on these, which is unfortunate.)",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9e00ce7_a58b970a",
        "filename": "src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 705,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "`%f` likewise here.",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2877fae0_f5951d61",
        "filename": "src/power_control.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T20:18:16Z",
      "side": 1,
      "message": "Hmm...I\u0027m far from being a C++ expert, but from a glance at the boost docs (https://www.boost.org/doc/libs/1_66_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_after.html), would it work to just pass the `std::chrono::duration` directly to `.expires_after()` and bypass the `duration_cast`?  (Here and in a bunch of other places of course.)",
      "revId": "45e886467bf77ec14c9cca3687afe2c256ae8f74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}