{
  "comments": [
    {
      "key": {
        "uuid": "734d42d0_63b467b1",
        "filename": "config/power-config-host0.json",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2021-11-18T08:41:48Z",
      "side": 1,
      "message": "Suggest to attach the unit like \"Ms\" did.",
      "range": {
        "startLine": 77,
        "startChar": 15,
        "endLine": 85,
        "endChar": 25
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b929b23c_7ec2ceb6",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-16T22:02:34Z",
      "side": 1,
      "message": "Why not standardize on ms rather than involving floating point math?\n\nWhy not \u0027double\u0027 instead of \u0027float\u0027?",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f25cc452_eeb01396",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-11-16T22:09:22Z",
      "side": 1,
      "message": "Zev was mentioning that elsewhere Ed has indicated a direction to standardize on float seconds for timing configuration values.  It might be nice if we could get the whole project to standardize on the same recommended timing config type.\n\n@Zev, maybe we need to hop on the mailing list or Discord and see if there is a possibility to standardize the whole project?  Would you want to kick that off?  Thanks!",
      "parentUuid": "b929b23c_7ec2ceb6",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f21739_bf4b5433",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T22:09:50Z",
      "side": 1,
      "message": "\u003e Why not standardize on ms rather than involving floating point math?\n\nThere\u0027s some discussion of that in the prior comments on this change (https://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/48208/2..3#message-8d8f9b0dc669713ea6635a34709127a349629943).\n\n\u003e Why not \u0027double\u0027 instead of \u0027float\u0027?\n\nFor our purposes here I\u0027d expect a single-precision float to be plenty accurate, but I\u0027d be fine with switching to double if that\u0027s deemed preferable.",
      "parentUuid": "b929b23c_7ec2ceb6",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a254443_4ed11b4a",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-16T22:25:15Z",
      "side": 1,
      "message": "\u003e Zev was mentioning that elsewhere Ed has indicated a direction to standardize on float seconds for timing configuration values. \n\n\u003e There\u0027s some discussion of that in the prior comments on this change (https://gerrit.openbmc-project.xyz/c/openbmc/x86-power-control/+/48208/2..3#message-8d8f9b0dc669713ea6635a34709127a349629943).\n\nHmm.  Ok.  At a dbus level I\u0027ve been trying to get everything standardized on what Time/EpochTime uses, which is uint64 of microseconds.\n\n\u003e For our purposes here I\u0027d expect a single-precision float to be plenty accurate, but I\u0027d be fine with switching to double if that\u0027s deemed preferable.\n\nI would recommend double mostly for consistency.  I see very few places where we use \u0027float\u0027 in the code base (other than some of the ADC code in  dbus-sensors that is similar to this code change) and if you use \u0027double\u0027 there is less thought required.  Since so much uses \u0027double\u0027 in libraries over \u0027float\u0027 there is usually less conversions involved in just sticking with \u0027double\u0027.",
      "parentUuid": "16f21739_bf4b5433",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3869324b_4678dcab",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1001239
      },
      "writtenOn": "2021-11-16T22:34:35Z",
      "side": 1,
      "message": "\"At a dbus level I\u0027ve been trying to get everything standardized on what Time/EpochTime uses, which is uint64 of microseconds.\"\n\nIf that is the direction, we should all then use microseconds for the time. The float to integer conversion looks confusing  - just my 2 cents on this topic. Anyway, I am fine either way, please let me know whichever way you all want to proceed.",
      "parentUuid": "5a254443_4ed11b4a",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d5b288_33677931",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2021-11-16T22:37:28Z",
      "side": 1,
      "message": "\u003e If that is the direction, we should all then use microseconds for the time.\n\nI dunno -- that may be fine for use in internal dbus APIs and such, but it doesn\u0027t sound like a good fit for a config file to me, since it seems highly likely to lead to a lot of awkward (and error-prone) squinting at questions of \"is that the right number of zeros on the end of that huge number?\"",
      "parentUuid": "3869324b_4678dcab",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8360ee3_c6493bc9",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1001239
      },
      "writtenOn": "2021-11-16T22:40:38Z",
      "side": 1,
      "message": "We need a standardized approach to represent a quantity - in this case, time. I am fine whatever approach the project takes. But mixing the quantities may create confusion. Just a thought...",
      "parentUuid": "78d5b288_33677931",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5745d9ac_2e0223db",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1001239
      },
      "writtenOn": "2021-11-16T22:41:46Z",
      "side": 1,
      "message": "*quantities \u003d units. Sorry for the confusion.",
      "parentUuid": "d8360ee3_c6493bc9",
      "range": {
        "startLine": 127,
        "startChar": 40,
        "endLine": 127,
        "endChar": 45
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "543dfbd7_b7cb7c65",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-16T22:02:34Z",
      "side": 1,
      "message": "If you do end up using float/double here you might consider \u0027duration\u003cdouble, 1\u003e\u0027 or \u0027duration\u003cdouble, std::ratio\u003c1\u003e\u003e\u0027.  I had to look up what the default template arguments to duration mean otherwise to ensure you did the correct thing here.",
      "range": {
        "startLine": 540,
        "startChar": 34,
        "endLine": 540,
        "endChar": 40
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f8c37a1_f72d1c63",
        "filename": "src/power_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-16T22:02:34Z",
      "side": 1,
      "message": "Can you remove these \u0027const\u0027s while you\u0027re at it?  There are a bunch of \u0027const int\u0027 and \u0027const float\u0027 in this file it looks like which are pointless (r-value POD arguments do not include \u0027const\u0027 in the function name mangling so there is no difference).",
      "range": {
        "startLine": 1152,
        "startChar": 56,
        "endLine": 1152,
        "endChar": 61
      },
      "revId": "9a5aa29166bd7c9c9a113e8e9b58ab140fd6bcc2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}